<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.6.1 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./test_all</line>
</preamble>

<pid>4203</pid>
<ppid>4202</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind</exe>
    <arg>--xml-file=valgrind.xml</arg>
    <arg>--xml=yes</arg>
    <arg>--num-callers=25</arg>
    <arg>--track-origins=yes</arg>
    <arg>--show-reachable=yes</arg>
  </vargv>
  <argv>
    <exe>./test_all</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.607 </time>
</status>

<error>
  <unique>0x2b</unique>
  <tid>4</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param socketcall.sendmsg(msg.msg_iov[i]) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x7136F4E</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
      <fn>sendmsg</fn>
    </frame>
    <frame>
      <ip>0x71090DB</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710920C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4FC0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6E09</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F7000</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F70C3</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send</fn>
    </frame>
    <frame>
      <ip>0x70CBC41</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::send(DBus::Message const&amp;, unsigned int*)</fn>
    </frame>
    <frame>
      <ip>0x70C5934</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectAdaptor::method_handler_launcher(DBus::InterfaceAdaptor*, DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C5A7D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C46E6</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x73ebaa8 is 8 bytes inside a block of size 40 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710D754</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FCDC4</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FF6D7</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710802D</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71080E1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108F4E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7109335</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6C38</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7102395</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_pending_call_block</fn>
    </frame>
    <frame>
      <ip>0x70F61C6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F17AF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x8392FA0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::srs::_getRecordTask_stub(DBus::CallMessage const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService-adaptor.h</file>
      <line>738</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c</unique>
  <tid>4</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param socketcall.sendmsg(msg.msg_iov[i]) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x7136F4E</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
      <fn>sendmsg</fn>
    </frame>
    <frame>
      <ip>0x71090DB</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710920C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4FC0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6E09</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F7000</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F70C3</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send</fn>
    </frame>
    <frame>
      <ip>0x70CBC41</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::send(DBus::Message const&amp;, unsigned int*)</fn>
    </frame>
    <frame>
      <ip>0x70C5934</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectAdaptor::method_handler_launcher(DBus::InterfaceAdaptor*, DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C5A7D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C46E6</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x73ed468 is 8 bytes inside a block of size 223 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710CFBF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D026</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710BC52</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710BE22</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FA67C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FA6C5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FE73C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_iter_append_basic</fn>
    </frame>
    <frame>
      <ip>0x71001ED</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_new_error</fn>
    </frame>
    <frame>
      <ip>0x710272E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F5EB0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_notify</fn>
    </frame>
    <frame>
      <ip>0x70F603C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply</fn>
    </frame>
    <frame>
      <ip>0x70F617C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F0D91</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_name_has_owner</fn>
    </frame>
    <frame>
      <ip>0x70CB1CF</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::has_name(char const*)</fn>
    </frame>
    <frame>
      <ip>0x6F9ABAF</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>190</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x839941A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::srs::_searchRecordSchedules_stub(DBus::CallMessage const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService-adaptor.h</file>
      <line>529</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2e</unique>
  <tid>4</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param socketcall.sendmsg(msg.msg_iov[i]) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x7136F4E</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
      <fn>sendmsg</fn>
    </frame>
    <frame>
      <ip>0x71090DB</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710920C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4FC0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6E09</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F7000</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F70C3</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send</fn>
    </frame>
    <frame>
      <ip>0x70CBC41</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::send(DBus::Message const&amp;, unsigned int*)</fn>
    </frame>
    <frame>
      <ip>0x70C5934</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectAdaptor::method_handler_launcher(DBus::InterfaceAdaptor*, DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C5A7D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C46E6</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x73ed468 is 8 bytes inside a block of size 223 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710CFBF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D026</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710BC52</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710BE22</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FA67C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FA6C5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FE73C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_iter_append_basic</fn>
    </frame>
    <frame>
      <ip>0x71001ED</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_new_error</fn>
    </frame>
    <frame>
      <ip>0x710272E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F5EB0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_notify</fn>
    </frame>
    <frame>
      <ip>0x70F603C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply</fn>
    </frame>
    <frame>
      <ip>0x70F617C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F0D91</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_name_has_owner</fn>
    </frame>
    <frame>
      <ip>0x70CB1CF</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::has_name(char const*)</fn>
    </frame>
    <frame>
      <ip>0x6F9ABAF</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>190</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x839683A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::srs::_searchRecordTasks_stub(DBus::CallMessage const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService-adaptor.h</file>
      <line>595</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x30</unique>
  <tid>4</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param socketcall.sendmsg(msg.msg_iov[i]) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x7136F4E</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
      <fn>sendmsg</fn>
    </frame>
    <frame>
      <ip>0x71090DB</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710920C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4FC0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6E09</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F7000</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F70C3</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send</fn>
    </frame>
    <frame>
      <ip>0x70CBC41</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::send(DBus::Message const&amp;, unsigned int*)</fn>
    </frame>
    <frame>
      <ip>0x70C5934</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectAdaptor::method_handler_launcher(DBus::InterfaceAdaptor*, DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C5A7D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C46E6</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x73ed468 is 8 bytes inside a block of size 223 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710CFBF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D026</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710BC52</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710BE22</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FA67C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FA6C5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FE73C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_iter_append_basic</fn>
    </frame>
    <frame>
      <ip>0x71001ED</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_new_error</fn>
    </frame>
    <frame>
      <ip>0x710272E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F5EB0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_notify</fn>
    </frame>
    <frame>
      <ip>0x70F603C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply</fn>
    </frame>
    <frame>
      <ip>0x70F617C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F0D91</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_name_has_owner</fn>
    </frame>
    <frame>
      <ip>0x70CB1CF</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::has_name(char const*)</fn>
    </frame>
    <frame>
      <ip>0x6F9ABAF</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>190</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x8394DEE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::srs::_getRecordSchedule_stub(DBus::CallMessage const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService-adaptor.h</file>
      <line>668</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x31</unique>
  <tid>4</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param socketcall.sendmsg(msg.msg_iov[i]) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x7136F4E</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
      <fn>sendmsg</fn>
    </frame>
    <frame>
      <ip>0x71090DB</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710920C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4FC0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6E09</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F7000</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F70C3</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send</fn>
    </frame>
    <frame>
      <ip>0x70CBC41</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::send(DBus::Message const&amp;, unsigned int*)</fn>
    </frame>
    <frame>
      <ip>0x70C5934</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectAdaptor::method_handler_launcher(DBus::InterfaceAdaptor*, DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C5A7D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C46E6</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x73e9104 is 4 bytes inside a block of size 223 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710CFBF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D026</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710BC52</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710BE22</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FA67C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FA6C5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FE73C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_iter_append_basic</fn>
    </frame>
    <frame>
      <ip>0x71001ED</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_new_error</fn>
    </frame>
    <frame>
      <ip>0x710272E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F5EB0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_notify</fn>
    </frame>
    <frame>
      <ip>0x70F603C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply</fn>
    </frame>
    <frame>
      <ip>0x70F617C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F17AF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x838FB70</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::srs::_getRecordScheduleConflicts_stub(DBus::CallMessage const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService-adaptor.h</file>
      <line>864</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x33</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED0591</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BD0D</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E5957</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execDML(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>672</line>
    </frame>
    <frame>
      <ip>0x83AA2A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::store(SRS::RecordSchedule&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>276</line>
    </frame>
    <frame>
      <ip>0x839DAE9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordSchedule.cpp</file>
      <line>589</line>
    </frame>
    <frame>
      <ip>0x842EFEE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSNonEPGSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/RecordSchedule</dir>
      <file>CDSNonEPGSchedule.cpp</file>
      <line>178</line>
    </frame>
    <frame>
      <ip>0x83AD884</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x34</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED05A4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BD0D</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E5957</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execDML(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>672</line>
    </frame>
    <frame>
      <ip>0x83AA2A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::store(SRS::RecordSchedule&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>276</line>
    </frame>
    <frame>
      <ip>0x839DAE9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordSchedule.cpp</file>
      <line>589</line>
    </frame>
    <frame>
      <ip>0x842EFEE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSNonEPGSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/RecordSchedule</dir>
      <file>CDSNonEPGSchedule.cpp</file>
      <line>178</line>
    </frame>
    <frame>
      <ip>0x83AD884</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x35</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED05B7</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BD0D</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E5957</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execDML(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>672</line>
    </frame>
    <frame>
      <ip>0x83AA2A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::store(SRS::RecordSchedule&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>276</line>
    </frame>
    <frame>
      <ip>0x839DAE9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordSchedule.cpp</file>
      <line>589</line>
    </frame>
    <frame>
      <ip>0x842EFEE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSNonEPGSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/RecordSchedule</dir>
      <file>CDSNonEPGSchedule.cpp</file>
      <line>178</line>
    </frame>
    <frame>
      <ip>0x83AD884</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x36</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED0591</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BE72</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E5957</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execDML(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>672</line>
    </frame>
    <frame>
      <ip>0x83AA2A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::store(SRS::RecordSchedule&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>276</line>
    </frame>
    <frame>
      <ip>0x839DAE9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordSchedule.cpp</file>
      <line>589</line>
    </frame>
    <frame>
      <ip>0x842EFEE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSNonEPGSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/RecordSchedule</dir>
      <file>CDSNonEPGSchedule.cpp</file>
      <line>178</line>
    </frame>
    <frame>
      <ip>0x83AD884</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x37</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED05A4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BE72</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E5957</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execDML(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>672</line>
    </frame>
    <frame>
      <ip>0x83AA2A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::store(SRS::RecordSchedule&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>276</line>
    </frame>
    <frame>
      <ip>0x839DAE9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordSchedule.cpp</file>
      <line>589</line>
    </frame>
    <frame>
      <ip>0x842EFEE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSNonEPGSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/RecordSchedule</dir>
      <file>CDSNonEPGSchedule.cpp</file>
      <line>178</line>
    </frame>
    <frame>
      <ip>0x83AD884</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x38</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED05B7</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BE72</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E5957</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execDML(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>672</line>
    </frame>
    <frame>
      <ip>0x83AA2A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::store(SRS::RecordSchedule&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>276</line>
    </frame>
    <frame>
      <ip>0x839DAE9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordSchedule.cpp</file>
      <line>589</line>
    </frame>
    <frame>
      <ip>0x842EFEE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSNonEPGSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/RecordSchedule</dir>
      <file>CDSNonEPGSchedule.cpp</file>
      <line>178</line>
    </frame>
    <frame>
      <ip>0x83AD884</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x39</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED0591</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BF11</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E5957</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execDML(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>672</line>
    </frame>
    <frame>
      <ip>0x83AA2A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::store(SRS::RecordSchedule&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>276</line>
    </frame>
    <frame>
      <ip>0x839DAE9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordSchedule.cpp</file>
      <line>589</line>
    </frame>
    <frame>
      <ip>0x842EFEE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSNonEPGSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/RecordSchedule</dir>
      <file>CDSNonEPGSchedule.cpp</file>
      <line>178</line>
    </frame>
    <frame>
      <ip>0x83AD884</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3a</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED05A4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BF11</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E5957</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execDML(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>672</line>
    </frame>
    <frame>
      <ip>0x83AA2A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::store(SRS::RecordSchedule&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>276</line>
    </frame>
    <frame>
      <ip>0x839DAE9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordSchedule.cpp</file>
      <line>589</line>
    </frame>
    <frame>
      <ip>0x842EFEE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSNonEPGSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/RecordSchedule</dir>
      <file>CDSNonEPGSchedule.cpp</file>
      <line>178</line>
    </frame>
    <frame>
      <ip>0x83AD884</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x3b</unique>
  <tid>1</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED05B7</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BF11</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E5957</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execDML(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>672</line>
    </frame>
    <frame>
      <ip>0x83AA2A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::store(SRS::RecordSchedule&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>276</line>
    </frame>
    <frame>
      <ip>0x839DAE9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordSchedule.cpp</file>
      <line>589</line>
    </frame>
    <frame>
      <ip>0x842EFEE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSNonEPGSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/RecordSchedule</dir>
      <file>CDSNonEPGSchedule.cpp</file>
      <line>178</line>
    </frame>
    <frame>
      <ip>0x83AD884</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x45</unique>
  <tid>1</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param write(buf) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x7136A71</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
      <fn>write</fn>
    </frame>
    <frame>
      <ip>0x6ECC2B5</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EDB7BD</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EE6572</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEA9F4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEEF3A</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0D9C1</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E5957</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execDML(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>672</line>
    </frame>
    <frame>
      <ip>0x83AA951</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleSQL::update(SRS::RecordSchedule&amp;, unsigned short)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>625</line>
    </frame>
    <frame>
      <ip>0x83ABAC2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleSQL::notify(SRS::RecordSchedule&amp;, unsigned short)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x839DFD8</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordSchedule::flush()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordSchedule.cpp</file>
      <line>620</line>
    </frame>
    <frame>
      <ip>0x843062E</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSNonEPGSchedule::createTasks()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/RecordSchedule</dir>
      <file>CDSNonEPGSchedule.cpp</file>
      <line>317</line>
    </frame>
    <frame>
      <ip>0x8381AB2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>749</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x104db283 is 1,051 bytes inside a block of size 1,168 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x6F052C4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ECC969</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ECCAD2</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ECE715</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F2C4F2</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ED93EB</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EE98B4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EE99BF</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEBB1A</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEF58B</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0E8D2</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E3E97</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::DB::execFile(char const*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>1045</line>
    </frame>
    <frame>
      <ip>0x83CF729</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::createTables()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>228</line>
    </frame>
    <frame>
      <ip>0x83DEB33</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::initDB()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>154</line>
    </frame>
    <frame>
      <ip>0x83DFC45</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::removeDB()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>115</line>
    </frame>
    <frame>
      <ip>0x84D9886</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::ServiceStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>103</line>
    </frame>
    <frame>
      <ip>0x84D9E8A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::createStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x84B0886</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::createStubs(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_stubs.cpp</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x80C0C57</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>51</line>
    </frame>
    <frame>
      <ip>0x80B2BFD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x46</unique>
  <tid>1</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param write(buf) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x7136A71</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
      <fn>write</fn>
    </frame>
    <frame>
      <ip>0x6ECC2B5</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEAD27</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEFB99</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEFDBC</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EF0E7E</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0C61A</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x6F151A3</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_exec</fn>
    </frame>
    <frame>
      <ip>0x83E2084</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Transaction::Private::commit()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>1261</line>
    </frame>
    <frame>
      <ip>0x83E20E6</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Transaction::commit()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>1304</line>
    </frame>
    <frame>
      <ip>0x8430647</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSNonEPGSchedule::createTasks()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/RecordSchedule</dir>
      <file>CDSNonEPGSchedule.cpp</file>
      <line>318</line>
    </frame>
    <frame>
      <ip>0x8381AB2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>749</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x104db280 is 1,048 bytes inside a block of size 1,168 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x6F052C4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ECC969</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ECCAD2</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ECE715</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F2C4F2</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ED93EB</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EE98B4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EE99BF</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEBB1A</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEF58B</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0E8D2</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E3E97</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::DB::execFile(char const*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>1045</line>
    </frame>
    <frame>
      <ip>0x83CF729</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::createTables()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>228</line>
    </frame>
    <frame>
      <ip>0x83DEB33</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::initDB()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>154</line>
    </frame>
    <frame>
      <ip>0x83DFC45</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::removeDB()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>115</line>
    </frame>
    <frame>
      <ip>0x84D9886</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::ServiceStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>103</line>
    </frame>
    <frame>
      <ip>0x84D9E8A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::createStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x84B0886</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::createStubs(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_stubs.cpp</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x80C0C57</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>51</line>
    </frame>
    <frame>
      <ip>0x80B2BFD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x47</unique>
  <tid>5</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param timer_create(evp) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x7123636</ip>
      <obj>/lib/librt-2.6.1.so</obj>
      <fn>timer_create</fn>
    </frame>
    <frame>
      <ip>0x83EB43C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::prepare(void*&amp;, __sigset_t&amp;, itimerspec&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>246</line>
    </frame>
    <frame>
      <ip>0x83EC4A0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>273</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x146ba1e4 is on thread 5's stack</auxwhat>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x71235A2</ip>
      <obj>/lib/librt-2.6.1.so</obj>
      <fn>timer_create</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x48</unique>
  <tid>5</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED0553</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BD0D</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E57AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x84713A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ObjectQuery::exec()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Query.cpp</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x83D1A37</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::getNextTask(unsigned char&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskQuery.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x83EC7C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x49</unique>
  <tid>5</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED0591</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BD0D</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E57AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x84713A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ObjectQuery::exec()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Query.cpp</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x83D1A37</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::getNextTask(unsigned char&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskQuery.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x83EC7C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4a</unique>
  <tid>5</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED05A4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BD0D</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E57AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x84713A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ObjectQuery::exec()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Query.cpp</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x83D1A37</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::getNextTask(unsigned char&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskQuery.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x83EC7C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4b</unique>
  <tid>5</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED05B7</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BD0D</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E57AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x84713A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ObjectQuery::exec()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Query.cpp</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x83D1A37</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::getNextTask(unsigned char&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskQuery.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x83EC7C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4c</unique>
  <tid>5</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED0553</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BE72</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E57AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x84713A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ObjectQuery::exec()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Query.cpp</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x83D1A37</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::getNextTask(unsigned char&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskQuery.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x83EC7C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4d</unique>
  <tid>5</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED0591</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BE72</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E57AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x84713A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ObjectQuery::exec()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Query.cpp</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x83D1A37</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::getNextTask(unsigned char&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskQuery.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x83EC7C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4e</unique>
  <tid>5</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED05A4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BE72</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E57AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x84713A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ObjectQuery::exec()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Query.cpp</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x83D1A37</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::getNextTask(unsigned char&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskQuery.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x83EC7C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4f</unique>
  <tid>5</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED05B7</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BE72</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E57AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x84713A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ObjectQuery::exec()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Query.cpp</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x83D1A37</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::getNextTask(unsigned char&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskQuery.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x83EC7C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x50</unique>
  <tid>5</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED0553</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BF11</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E57AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x84713A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ObjectQuery::exec()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Query.cpp</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x83D1A37</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::getNextTask(unsigned char&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskQuery.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x83EC7C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x51</unique>
  <tid>5</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED0591</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BF11</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E57AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x84713A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ObjectQuery::exec()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Query.cpp</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x83D1A37</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::getNextTask(unsigned char&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskQuery.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x83EC7C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x52</unique>
  <tid>5</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED05A4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BF11</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E57AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x84713A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ObjectQuery::exec()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Query.cpp</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x83D1A37</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::getNextTask(unsigned char&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskQuery.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x83EC7C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x53</unique>
  <tid>5</tid>
  <kind>UninitCondition</kind>
  <what>Conditional jump or move depends on uninitialised value(s)</what>
  <stack>
    <frame>
      <ip>0x6ED05B7</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0BF11</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E57AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>707</line>
    </frame>
    <frame>
      <ip>0x84713A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ObjectQuery::exec()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Query.cpp</file>
      <line>118</line>
    </frame>
    <frame>
      <ip>0x83D1A37</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::getNextTask(unsigned char&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskQuery.h</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x83EC7C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>319</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x81</unique>
  <tid>5</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param write(buf) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x7136A71</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
      <fn>write</fn>
    </frame>
    <frame>
      <ip>0x6ECC2B5</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EE64E2</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEA9F4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEEF3A</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0D9C1</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E5957</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execDML(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>672</line>
    </frame>
    <frame>
      <ip>0x83C5D82</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordTaskSQL::update(SRS::RecordTask&amp;, unsigned int)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskFactory.cpp</file>
      <line>435</line>
    </frame>
    <frame>
      <ip>0x83C5F9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordTaskSQL::notify(SRS::RecordTask&amp;, unsigned int)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTaskFactory.cpp</file>
      <line>55</line>
    </frame>
    <frame>
      <ip>0x83B7EE1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordTask::flush()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordTask.cpp</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x83ECBD9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>359</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
  <auxwhat>Address 0x104db280 is 1,048 bytes inside a block of size 1,168 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x6F052C4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ECC969</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ECCAD2</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ECE715</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F2C4F2</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ED93EB</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EE98B4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EE99BF</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEBB1A</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEF58B</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0E8D2</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E3E97</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::DB::execFile(char const*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>1045</line>
    </frame>
    <frame>
      <ip>0x83CF729</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::createTables()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>228</line>
    </frame>
    <frame>
      <ip>0x83DEB33</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::initDB()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>154</line>
    </frame>
    <frame>
      <ip>0x83DFC45</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::removeDB()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>115</line>
    </frame>
    <frame>
      <ip>0x84D9886</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::ServiceStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>103</line>
    </frame>
    <frame>
      <ip>0x84D9E8A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::createStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x84B0886</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::createStubs(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_stubs.cpp</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x80C0C57</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>51</line>
    </frame>
    <frame>
      <ip>0x80B2BFD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
  </stack>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x84B84FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>testHelpers::testEnv::createSched(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_helpers_data.cpp</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x80CB692</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::testRendererError()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_task.cpp</file>
      <line>200</line>
    </frame>
    <frame>
      <ip>0x80B2BBE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x231c</unique>
  <tid>1</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param write(buf) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x7136A71</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
      <fn>write</fn>
    </frame>
    <frame>
      <ip>0x6ECC2B5</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6ECEEB3</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EE650D</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEA9F4</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EED26F</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6EEF003</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F0D9C1</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
    </frame>
    <frame>
      <ip>0x6F11770</ip>
      <obj>/usr/lib/libsqlite3.so.0.8.6</obj>
      <fn>sqlite3_step</fn>
    </frame>
    <frame>
      <ip>0x83E5957</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SQLite::Statement::execDML(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>CppSQLite3.cpp</file>
      <line>672</line>
    </frame>
    <frame>
      <ip>0x83AA2A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::store(SRS::RecordSchedule&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>276</line>
    </frame>
    <frame>
      <ip>0x839DAE9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordSchedule.cpp</file>
      <line>589</line>
    </frame>
    <frame>
      <ip>0x842EFEE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSNonEPGSchedule::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, SRS::RecordScheduleFactory&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/RecordSchedule</dir>
      <file>CDSNonEPGSchedule.cpp</file>
      <line>178</line>
    </frame>
    <frame>
      <ip>0x83AD884</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>212</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x8142B89</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiScheduleBrowseTest::testBrowse()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_schedule_browse.cpp</file>
      <line>172</line>
    </frame>
    <frame>
      <ip>0x81391F2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiScheduleBrowseTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
  <auxwhat>Address 0xfef6c43c is on thread 1's stack</auxwhat>
  <auxwhat>Uninitialised value was created by a heap allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83AD61F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordScheduleFactory::create(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, int&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordScheduleFactory.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x838183A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ScheduledRecordingService::createRecordSchedule(std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, AutoPtr&lt;SRS::RecordSchedule&gt;&amp;, unsigned int*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService.cpp</file>
      <line>740</line>
    </frame>
    <frame>
      <ip>0x8142B89</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiScheduleBrowseTest::testBrowse()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_api_schedule_browse.cpp</file>
      <line>172</line>
    </frame>
    <frame>
      <ip>0x81391F2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiScheduleBrowseTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:03:42.566 </time>
</status>

<error>
  <unique>0x2c389</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>4 bytes in 1 blocks are still reachable in loss record 1 of 175</text>
    <leakedbytes>4</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x6F97B68</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>DBus::RefCnt::RefCnt()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>util.h</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x70C6F2B</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C6F57</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CA5B8</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CA989</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c38a</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>4 bytes in 1 blocks are still reachable in loss record 2 of 175</text>
    <leakedbytes>4</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x6F97B68</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>DBus::RefCnt::RefCnt()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>util.h</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x70CC57D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CAF2C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::Connection(DBus::Connection::Private*, DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x70CB05F</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c38b</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>4 bytes in 1 blocks are still reachable in loss record 3 of 175</text>
    <leakedbytes>4</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x8414503</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>util.h</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c38c</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>4 bytes in 1 blocks are still reachable in loss record 4 of 175</text>
    <leakedbytes>4</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x841494F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>util.h</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c38d</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>4 bytes in 1 blocks are still reachable in loss record 5 of 175</text>
    <leakedbytes>4</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x8414D9B</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>util.h</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c38e</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>4 bytes in 1 blocks are still reachable in loss record 6 of 175</text>
    <leakedbytes>4</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x8415574</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>util.h</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c38f</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>4 bytes in 1 blocks are still reachable in loss record 7 of 175</text>
    <leakedbytes>4</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x6F97B68</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>DBus::RefCnt::RefCnt()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>util.h</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x70C6F2B</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C6F57</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C52D2</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::register_obj()</fn>
    </frame>
    <frame>
      <ip>0x70C54E8</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::ObjectProxy(DBus::Connection&amp;, DBus::Path const&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x8410037</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c390</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>4 bytes in 1 blocks are still reachable in loss record 8 of 175</text>
    <leakedbytes>4</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x6F97B68</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>DBus::RefCnt::RefCnt()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>util.h</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x70C6F2B</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C6F57</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C52D2</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::register_obj()</fn>
    </frame>
    <frame>
      <ip>0x70C54E8</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::ObjectProxy(DBus::Connection&amp;, DBus::Path const&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x840FCD4</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::CMProxy::CMProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x836AD26</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::CMProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>141</line>
    </frame>
    <frame>
      <ip>0x836B742</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>155</line>
    </frame>
    <frame>
      <ip>0x8379232</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c391</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>5 bytes in 1 blocks are still reachable in loss record 9 of 175</text>
    <leakedbytes>5</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710ACD3</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F17F8</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c392</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are still reachable in loss record 10 of 175</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710D754</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D7A6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71085B5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c393</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are still reachable in loss record 11 of 175</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710D754</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D7A6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71085CF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c394</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are still reachable in loss record 12 of 175</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710D754</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D7A6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70EFF24</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F0043</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108418</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108629</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c395</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are still reachable in loss record 13 of 175</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710D754</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D7A6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70EFF55</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F0043</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108418</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108629</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c396</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are still reachable in loss record 14 of 175</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x649F0FE</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x7109F36</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F2A6C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_allocate_data_slot</fn>
    </frame>
    <frame>
      <ip>0x70F1498</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F170F</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c397</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>8 bytes in 1 blocks are still reachable in loss record 15 of 175</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x649F0FE</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x7109D8D</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F29B3</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_set_data</fn>
    </frame>
    <frame>
      <ip>0x70F14E6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F170F</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c398</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>8 bytes in 2 blocks are still reachable in loss record 16 of 175</text>
    <leakedbytes>8</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x6F97B68</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>DBus::RefCnt::RefCnt()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>util.h</file>
      <line>49</line>
    </frame>
    <frame>
      <ip>0x70D3625</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70D493D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70D4146</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusDispatcher::add_watch(DBus::Watch::Internal*)</fn>
    </frame>
    <frame>
      <ip>0x70CD9D1</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x71099F7</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F3D37</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_set_watch_functions</fn>
    </frame>
    <frame>
      <ip>0x70CAEC2</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::setup(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x70CAF3E</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::Connection(DBus::Connection::Private*, DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x70CB05F</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c399</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>12 bytes in 1 blocks are still reachable in loss record 17 of 175</text>
    <leakedbytes>12</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3D5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71072AA</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_threads_init</fn>
    </frame>
    <frame>
      <ip>0x7110A29</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710710E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_threads_init_default</fn>
    </frame>
    <frame>
      <ip>0x70CDB05</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::_init_threading()</fn>
    </frame>
    <frame>
      <ip>0x70CE12B</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Dispatcher::Dispatcher()</fn>
    </frame>
    <frame>
      <ip>0x70D3FA3</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusDispatcher::BusDispatcher()</fn>
    </frame>
    <frame>
      <ip>0x6F9AE34</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>160</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c39a</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>12 bytes in 1 blocks are still reachable in loss record 18 of 175</text>
    <leakedbytes>12</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3D5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7107330</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_threads_init</fn>
    </frame>
    <frame>
      <ip>0x7110A29</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710710E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_threads_init_default</fn>
    </frame>
    <frame>
      <ip>0x70CDB05</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::_init_threading()</fn>
    </frame>
    <frame>
      <ip>0x70CE12B</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Dispatcher::Dispatcher()</fn>
    </frame>
    <frame>
      <ip>0x70D3FA3</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusDispatcher::BusDispatcher()</fn>
    </frame>
    <frame>
      <ip>0x6F9AE34</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>160</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c39b</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>12 bytes in 1 blocks are still reachable in loss record 19 of 175</text>
    <leakedbytes>12</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710ACD3</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1BCE</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c39c</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>12 bytes in 1 blocks are still reachable in loss record 20 of 175</text>
    <leakedbytes>12</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710ACD3</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1C79</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c39d</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>12 bytes in 1 blocks are still reachable in loss record 21 of 175</text>
    <leakedbytes>12</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3D5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1CC4</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c39e</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>12 bytes in 1 blocks are still reachable in loss record 22 of 175</text>
    <leakedbytes>12</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x7101901</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4BC6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c39f</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>12 bytes in 1 blocks are still reachable in loss record 23 of 175</text>
    <leakedbytes>12</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x70F14C2</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F170F</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3a0</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>12 bytes in 1 blocks are still reachable in loss record 24 of 175</text>
    <leakedbytes>12</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3D5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FF5BC</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_unref</fn>
    </frame>
    <frame>
      <ip>0x7102444</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F61DA</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F17AF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3a1</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>12 bytes in 3 blocks are still reachable in loss record 25 of 175</text>
    <leakedbytes>12</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x649F0FE</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x71016DB</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7101E19</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F3235</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_register_object_path</fn>
    </frame>
    <frame>
      <ip>0x70C4CF6</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectAdaptor::register_obj()</fn>
    </frame>
    <frame>
      <ip>0x70C4FA1</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectAdaptor::ObjectAdaptor(DBus::Connection&amp;, DBus::Path const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x8079B82</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_dbus_api.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3a2</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 26 of 175</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x70CA587</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CA989</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3a3</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 27 of 175</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x70F349A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_add_filter</fn>
    </frame>
    <frame>
      <ip>0x70CA5CF</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CA989</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3a4</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 28 of 175</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x8414430</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3a5</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 29 of 175</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x8414880</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3a6</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 30 of 175</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x8414CCC</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3a7</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 31 of 175</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x84154A5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3a8</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 32 of 175</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x70C52B3</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::register_obj()</fn>
    </frame>
    <frame>
      <ip>0x70C54E8</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::ObjectProxy(DBus::Connection&amp;, DBus::Path const&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x8410037</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3a9</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 33 of 175</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x70F349A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_add_filter</fn>
    </frame>
    <frame>
      <ip>0x70CAC6A</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::add_filter(DBus::Slot&lt;bool, DBus::Message const&amp;&gt;&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C52E4</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::register_obj()</fn>
    </frame>
    <frame>
      <ip>0x70C54E8</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::ObjectProxy(DBus::Connection&amp;, DBus::Path const&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x8410037</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3aa</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 34 of 175</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x70C52B3</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::register_obj()</fn>
    </frame>
    <frame>
      <ip>0x70C54E8</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::ObjectProxy(DBus::Connection&amp;, DBus::Path const&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x840FCD4</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::CMProxy::CMProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x836AD26</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::CMProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>141</line>
    </frame>
    <frame>
      <ip>0x836B742</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>155</line>
    </frame>
    <frame>
      <ip>0x8379232</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ab</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>16 bytes in 1 blocks are still reachable in loss record 35 of 175</text>
    <leakedbytes>16</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x70F349A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_add_filter</fn>
    </frame>
    <frame>
      <ip>0x70CAC6A</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::add_filter(DBus::Slot&lt;bool, DBus::Message const&amp;&gt;&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C52E4</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::register_obj()</fn>
    </frame>
    <frame>
      <ip>0x70C54E8</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::ObjectProxy(DBus::Connection&amp;, DBus::Path const&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x840FCD4</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::CMProxy::CMProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x836AD26</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::CMProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>141</line>
    </frame>
    <frame>
      <ip>0x836B742</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>155</line>
    </frame>
    <frame>
      <ip>0x8379232</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ac</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>17 bytes in 1 blocks are possibly lost in loss record 36 of 175</text>
    <leakedbytes>17</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x8363CE9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ad</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>19 bytes in 1 blocks are possibly lost in loss record 37 of 175</text>
    <leakedbytes>19</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x8365415</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ae</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>20 bytes in 1 blocks are still reachable in loss record 38 of 175</text>
    <leakedbytes>20</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AED6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3af</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>20 bytes in 1 blocks are still reachable in loss record 39 of 175</text>
    <leakedbytes>20</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x714A02C</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x7149BB6</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
      <fn>dlopen</fn>
    </frame>
    <frame>
      <ip>0x64DD7B6</ip>
      <obj>/usr/local/lib/libstrategy.so.0.0.0</obj>
      <fn>StrategyFactory::getStrategy()</fn>
      <dir>/opt/jenkins/workspace/x86-target-strategy/src</dir>
      <file>factory.cpp</file>
      <line>63</line>
    </frame>
    <frame>
      <ip>0x83EDBAA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::WarmUpDispatcher::WarmUpDispatcher(SQLite::DB&amp;, SRS::Service&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>WarmUpDispatcher.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x83EBADE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::RecordWaker(SRS::Service&amp;, SRS::IRecordLauncher&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>100</line>
    </frame>
    <frame>
      <ip>0x83E0215</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::Service()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x84D9817</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::ServiceStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x84D9E8A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::createStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x82D23AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>cleanupDbTest::testCleanProg()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_cleanup_db.cpp</file>
      <line>130</line>
    </frame>
    <frame>
      <ip>0x82CC996</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;cleanupDbTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3b0</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>21 bytes in 1 blocks are possibly lost in loss record 40 of 175</text>
    <leakedbytes>21</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x81B3EC0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>taskGroupTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x81B285D</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;taskGroupTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3b1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>21 bytes in 1 blocks are possibly lost in loss record 41 of 175</text>
    <leakedbytes>21</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x81C23B4</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>wakerTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x81C1585</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;wakerTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3b2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>21 bytes in 1 blocks are possibly lost in loss record 42 of 175</text>
    <leakedbytes>21</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x824DF2E</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>recordDestinationTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x824B9C9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;recordDestinationTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3b3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>21 bytes in 1 blocks are possibly lost in loss record 43 of 175</text>
    <leakedbytes>21</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x837911E</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3b4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>22 bytes in 1 blocks are possibly lost in loss record 44 of 175</text>
    <leakedbytes>22</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x841550F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3b5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>22 bytes in 1 blocks are possibly lost in loss record 45 of 175</text>
    <leakedbytes>22</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x8364202</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3b6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>22 bytes in 1 blocks are possibly lost in loss record 46 of 175</text>
    <leakedbytes>22</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x8364E12</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3b7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>23 bytes in 1 blocks are possibly lost in loss record 47 of 175</text>
    <leakedbytes>23</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x841449E</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3b8</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 48 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x710C468</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710B400</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710B48E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710B51E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70EE59A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_parse_address</fn>
    </frame>
    <frame>
      <ip>0x70F65A2</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3b9</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 49 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x70F76B5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70EFF77</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F0043</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108418</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108629</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ba</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 50 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x70F76B5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70EFF83</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F0043</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108418</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108629</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3bb</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 51 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x70F76B5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70EFF8F</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F0043</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108418</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108629</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3bc</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 52 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x70F76B5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108450</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108629</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3bd</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 53 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x7109C09</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4A83</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3be</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 54 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x7106E67</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4A93</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3bf</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 55 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x710C468</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710A89A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4AAF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3c0</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 56 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x70C2AC7</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::allocate(unsigned int, void const*)</fn>
    </frame>
    <frame>
      <ip>0x70C2AEC</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::_M_get_node()</fn>
    </frame>
    <frame>
      <ip>0x70C2C96</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::_M_create_node(std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C3619</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C36B0</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::insert_unique(std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C3902</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C3944</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::map&lt;std::string, DBus::InterfaceProxy*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::insert(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C39C7</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::map&lt;std::string, DBus::InterfaceProxy*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::operator[](std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C1C40</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::InterfaceProxy::InterfaceProxy(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x8414248</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>23</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3c1</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are still reachable in loss record 57 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x70C2AC7</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::allocate(unsigned int, void const*)</fn>
    </frame>
    <frame>
      <ip>0x70C2AEC</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::_M_get_node()</fn>
    </frame>
    <frame>
      <ip>0x70C2C96</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::_M_create_node(std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C3619</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C36B0</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::insert_unique(std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C3902</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C3944</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::map&lt;std::string, DBus::InterfaceProxy*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::insert(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt;, std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C39C7</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::map&lt;std::string, DBus::InterfaceProxy*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::InterfaceProxy*&gt; &gt; &gt;::operator[](std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C1C40</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::InterfaceProxy::InterfaceProxy(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x840FA50</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::CMProxy::CMProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x836AD26</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::CMProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>141</line>
    </frame>
    <frame>
      <ip>0x836B742</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>155</line>
    </frame>
    <frame>
      <ip>0x8379232</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3c2</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>24 bytes in 2 blocks are still reachable in loss record 58 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x70D3527</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>__gnu_cxx::new_allocator&lt;std::_List_node&lt;DBus::DefaultWatch*&gt; &gt;::allocate(unsigned int, void const*)</fn>
    </frame>
    <frame>
      <ip>0x70D354C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::_List_base&lt;DBus::DefaultWatch*, std::allocator&lt;DBus::DefaultWatch*&gt; &gt;::_M_get_node()</fn>
    </frame>
    <frame>
      <ip>0x70D356C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::list&lt;DBus::DefaultWatch*, std::allocator&lt;DBus::DefaultWatch*&gt; &gt;::_M_create_node(DBus::DefaultWatch* const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70D37AB</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::list&lt;DBus::DefaultWatch*, std::allocator&lt;DBus::DefaultWatch*&gt; &gt;::_M_insert(std::_List_iterator&lt;DBus::DefaultWatch*&gt;, DBus::DefaultWatch* const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70D37DF</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>std::list&lt;DBus::DefaultWatch*, std::allocator&lt;DBus::DefaultWatch*&gt; &gt;::push_back(DBus::DefaultWatch* const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70D24BE</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::DefaultWatch::DefaultWatch(int, int, DBus::DefaultMainLoop*)</fn>
    </frame>
    <frame>
      <ip>0x70D4039</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusWatch::BusWatch(DBus::Watch::Internal*, DBus::BusDispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x70D40F6</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusDispatcher::add_watch(DBus::Watch::Internal*)</fn>
    </frame>
    <frame>
      <ip>0x70CD9D1</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x71099F7</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F3D37</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_set_watch_functions</fn>
    </frame>
    <frame>
      <ip>0x70CAEC2</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::setup(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x70CAF3E</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::Connection(DBus::Connection::Private*, DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x70CB05F</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3c3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 59 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84148EA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3c4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>24 bytes in 1 blocks are possibly lost in loss record 60 of 175</text>
    <leakedbytes>24</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x836480E</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3c5</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>27 bytes in 1 blocks are possibly lost in loss record 61 of 175</text>
    <leakedbytes>27</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x8414D36</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3c6</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are still reachable in loss record 62 of 175</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x71029DF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108428</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108629</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3c7</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are still reachable in loss record 63 of 175</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x71029DF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4BB2</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3c8</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are still reachable in loss record 64 of 175</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4409C1C</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440DC50</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440A782</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440D57D</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x735B6E0</ip>
      <obj>/lib/libc-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440A782</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x735B793</ip>
      <obj>/lib/libc-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x735B890</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>__libc_dlopen_mode</fn>
    </frame>
    <frame>
      <ip>0x7138287</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x713835F</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x713651A</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
      <fn>__pthread_unwind</fn>
    </frame>
    <frame>
      <ip>0x7131EA7</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
      <fn>pthread_exit</fn>
    </frame>
    <frame>
      <ip>0x6F8F60B</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3c9</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are still reachable in loss record 65 of 175</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x836CAD5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x836CDA5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::insert_unique(std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>927</line>
    </frame>
    <frame>
      <ip>0x836D068</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>949</line>
    </frame>
    <frame>
      <ip>0x8363EC3</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ca</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are still reachable in loss record 66 of 175</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x836CAD5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x836D0AC</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>947</line>
    </frame>
    <frame>
      <ip>0x83644E1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3cb</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are still reachable in loss record 67 of 175</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x836CAD5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x836D0AC</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>947</line>
    </frame>
    <frame>
      <ip>0x8364AE5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3cc</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are still reachable in loss record 68 of 175</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x836CAD5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x836D1C2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>957</line>
    </frame>
    <frame>
      <ip>0x83650E8</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3cd</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are still reachable in loss record 69 of 175</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x836CAD5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x836D1C2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>957</line>
    </frame>
    <frame>
      <ip>0x83656EC</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ce</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are still reachable in loss record 70 of 175</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x836CAD5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x836D1C2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::pair&lt;std::string const, void (AVTProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>957</line>
    </frame>
    <frame>
      <ip>0x8365CEF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3cf</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are still reachable in loss record 71 of 175</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x836BC97</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x836D7F1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::insert_unique(std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>927</line>
    </frame>
    <frame>
      <ip>0x836DAB4</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>949</line>
    </frame>
    <frame>
      <ip>0x836AF73</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::CMProxyStub()</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x836B742</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>155</line>
    </frame>
    <frame>
      <ip>0x8379232</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3d0</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>28 bytes in 1 blocks are still reachable in loss record 72 of 175</text>
    <leakedbytes>28</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x836BC97</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x836DC0E</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt;, std::_Select1st&lt;std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; &gt;, std::pair&lt;std::string const, void (CMProxyStub::*)(DBus::CallMessage&amp;, DBus::MessageIter&amp;)&gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>957</line>
    </frame>
    <frame>
      <ip>0x836B47B</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::CMProxyStub()</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x836B742</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>155</line>
    </frame>
    <frame>
      <ip>0x8379232</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3d1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>29 bytes in 1 blocks are possibly lost in loss record 73 of 175</text>
    <leakedbytes>29</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x8365A19</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3d2</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are still reachable in loss record 74 of 175</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D566</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70EFF6B</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F0043</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108418</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108629</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3d3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>31 bytes in 1 blocks are possibly lost in loss record 75 of 175</text>
    <leakedbytes>31</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x836B1D4</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::CMProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x836B742</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>155</line>
    </frame>
    <frame>
      <ip>0x8379232</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3d4</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 76 of 175</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x7110795</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7106EEF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7107540</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4AE3</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3d5</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 77 of 175</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x7110795</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7106EEF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7107540</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4AFC</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3d6</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 78 of 175</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x7110795</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7106EEF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7107540</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4B15</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3d7</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 79 of 175</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x7110795</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7106EEF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7107540</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4B60</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3d8</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 80 of 175</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x80654EF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x80657C5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::insert_unique(std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>927</line>
    </frame>
    <frame>
      <ip>0x8065A88</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>949</line>
    </frame>
    <frame>
      <ip>0x84136A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::map&lt;std::string, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::operator[](std::string const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x84144BC</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>25</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3d9</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 81 of 175</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x80654EF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x8065ACC</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>947</line>
    </frame>
    <frame>
      <ip>0x84136A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::map&lt;std::string, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::operator[](std::string const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x8414908</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>26</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3da</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 82 of 175</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x80654EF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x8065ACC</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>947</line>
    </frame>
    <frame>
      <ip>0x84136A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::map&lt;std::string, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::operator[](std::string const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x8414D54</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>27</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3db</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 83 of 175</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x80654EF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x8065BE2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt;, std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>957</line>
    </frame>
    <frame>
      <ip>0x84136A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::map&lt;std::string, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, DBus::Slot&lt;void, DBus::SignalMessage const&amp;&gt; &gt; &gt; &gt;::operator[](std::string const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x841552D</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3dc</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are still reachable in loss record 84 of 175</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x8064AC5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x80650C5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::insert_unique(std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>927</line>
    </frame>
    <frame>
      <ip>0x80661D2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>949</line>
    </frame>
    <frame>
      <ip>0x836967C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::record(DBus::CallMessage&amp;, DBus::MessageIter&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x836E38C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::_invoke_method(DBus::CallMessage&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x70C1B1D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::InterfaceProxy::invoke_method(DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x840CB35</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordLauncherMediaRenderer::start(SRS::RecordTask&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>246</line>
    </frame>
    <frame>
      <ip>0x83EC2DF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::startTask(SRS::RecordTask&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>184</line>
    </frame>
    <frame>
      <ip>0x83ECB05</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>353</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3dd</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>32 bytes in 2 blocks are still reachable in loss record 85 of 175</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x70D4118</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusDispatcher::add_watch(DBus::Watch::Internal*)</fn>
    </frame>
    <frame>
      <ip>0x70CD9D1</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x71099F7</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F3D37</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_set_watch_functions</fn>
    </frame>
    <frame>
      <ip>0x70CAEC2</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::setup(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x70CAF3E</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::Connection(DBus::Connection::Private*, DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x70CB05F</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3de</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>33 bytes in 1 blocks are possibly lost in loss record 86 of 175</text>
    <leakedbytes>33</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x836ADD2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::CMProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>85</line>
    </frame>
    <frame>
      <ip>0x836B742</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>155</line>
    </frame>
    <frame>
      <ip>0x8379232</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3df</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are still reachable in loss record 87 of 175</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x7109C2B</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71085EC</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3e0</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are still reachable in loss record 88 of 175</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x7109C2B</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710860C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3e1</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>36 bytes in 1 blocks are still reachable in loss record 89 of 175</text>
    <leakedbytes>36</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x7101418</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7101929</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4BC6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3e2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>37 bytes in 1 blocks are possibly lost in loss record 90 of 175</text>
    <leakedbytes>37</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C4E73</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Object::Object(DBus::Connection&amp;, DBus::Path const&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x70C54C1</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::ObjectProxy(DBus::Connection&amp;, DBus::Path const&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x8410037</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3e3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>37 bytes in 1 blocks are possibly lost in loss record 91 of 175</text>
    <leakedbytes>37</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C4E73</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Object::Object(DBus::Connection&amp;, DBus::Path const&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x70C54C1</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectProxy::ObjectProxy(DBus::Connection&amp;, DBus::Path const&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x840FCD4</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::CMProxy::CMProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x836AD26</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::CMProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>141</line>
    </frame>
    <frame>
      <ip>0x836B742</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>155</line>
    </frame>
    <frame>
      <ip>0x8379232</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3e4</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>40 bytes in 1 blocks are still reachable in loss record 92 of 175</text>
    <leakedbytes>40</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710D754</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FCDC4</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FFE25</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_new_signal</fn>
    </frame>
    <frame>
      <ip>0x70F4B88</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3e5</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>42 bytes in 1 blocks are still reachable in loss record 93 of 175</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710ACD3</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1ABF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3e6</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>42 bytes in 1 blocks are still reachable in loss record 94 of 175</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710D701</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108479</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108629</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3e7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>42 bytes in 2 blocks are possibly lost in loss record 95 of 175</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x813A653</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiScheduleBrowseTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8139231</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiScheduleBrowseTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3e8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>42 bytes in 2 blocks are possibly lost in loss record 96 of 175</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x8208BAF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>perfTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x820081D</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;perfTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3e9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>42 bytes in 2 blocks are possibly lost in loss record 97 of 175</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x82CDB00</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>cleanupDbTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x82CC9D5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;cleanupDbTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ea</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>42 bytes in 2 blocks are possibly lost in loss record 98 of 175</text>
    <leakedbytes>42</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x82D8841</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>taskSeriesID::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x82D8649</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;taskSeriesID&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3eb</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>43 bytes in 1 blocks are still reachable in loss record 99 of 175</text>
    <leakedbytes>43</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4403D08</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x4406751</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440DB7B</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440A782</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440D57D</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x7149C71</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440A782</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x714A092</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x7149BB6</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
      <fn>dlopen</fn>
    </frame>
    <frame>
      <ip>0x64DD7B6</ip>
      <obj>/usr/local/lib/libstrategy.so.0.0.0</obj>
      <fn>StrategyFactory::getStrategy()</fn>
      <dir>/opt/jenkins/workspace/x86-target-strategy/src</dir>
      <file>factory.cpp</file>
      <line>63</line>
    </frame>
    <frame>
      <ip>0x83EDBAA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::WarmUpDispatcher::WarmUpDispatcher(SQLite::DB&amp;, SRS::Service&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>WarmUpDispatcher.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x83EBADE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::RecordWaker(SRS::Service&amp;, SRS::IRecordLauncher&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>100</line>
    </frame>
    <frame>
      <ip>0x83E0215</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::Service()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x84D9817</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::ServiceStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x84D9E8A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::createStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x82D23AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>cleanupDbTest::testCleanProg()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_cleanup_db.cpp</file>
      <line>130</line>
    </frame>
    <frame>
      <ip>0x82CC996</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;cleanupDbTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ec</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>43 bytes in 1 blocks are still reachable in loss record 100 of 175</text>
    <leakedbytes>43</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4407DA3</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x4404B98</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x44068C5</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440DB7B</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440A782</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440D57D</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x7149C71</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440A782</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x714A092</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x7149BB6</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
      <fn>dlopen</fn>
    </frame>
    <frame>
      <ip>0x64DD7B6</ip>
      <obj>/usr/local/lib/libstrategy.so.0.0.0</obj>
      <fn>StrategyFactory::getStrategy()</fn>
      <dir>/opt/jenkins/workspace/x86-target-strategy/src</dir>
      <file>factory.cpp</file>
      <line>63</line>
    </frame>
    <frame>
      <ip>0x83EDBAA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::WarmUpDispatcher::WarmUpDispatcher(SQLite::DB&amp;, SRS::Service&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>WarmUpDispatcher.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x83EBADE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::RecordWaker(SRS::Service&amp;, SRS::IRecordLauncher&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>100</line>
    </frame>
    <frame>
      <ip>0x83E0215</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::Service()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x84D9817</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::ServiceStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x84D9E8A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::createStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x82D23AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>cleanupDbTest::testCleanProg()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_cleanup_db.cpp</file>
      <line>130</line>
    </frame>
    <frame>
      <ip>0x82CC996</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;cleanupDbTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ed</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>44 bytes in 1 blocks are still reachable in loss record 101 of 175</text>
    <leakedbytes>44</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x83703C0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;int, std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x83706A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;int, std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::insert_unique(std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>927</line>
    </frame>
    <frame>
      <ip>0x83707DE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;int, std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt; &gt;, std::pair&lt;int const, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>949</line>
    </frame>
    <frame>
      <ip>0x836A92D</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::record(DBus::CallMessage&amp;, DBus::MessageIter&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x836E38C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::_invoke_method(DBus::CallMessage&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x70C1B1D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::InterfaceProxy::invoke_method(DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x840CB35</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordLauncherMediaRenderer::start(SRS::RecordTask&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>246</line>
    </frame>
    <frame>
      <ip>0x83EC2DF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::startTask(SRS::RecordTask&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>184</line>
    </frame>
    <frame>
      <ip>0x83ECB05</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>353</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ee</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>44 bytes in 11 blocks are still reachable in loss record 102 of 175</text>
    <leakedbytes>44</leakedbytes>
    <leakedblocks>11</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x8064095</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::operator=(std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x836A327</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::record(DBus::CallMessage&amp;, DBus::MessageIter&amp;)</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>types.h</file>
      <line>501</line>
    </frame>
    <frame>
      <ip>0x836E38C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::_invoke_method(DBus::CallMessage&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x70C1B1D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::InterfaceProxy::invoke_method(DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x840CB35</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordLauncherMediaRenderer::start(SRS::RecordTask&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>246</line>
    </frame>
    <frame>
      <ip>0x83EC2DF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::startTask(SRS::RecordTask&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>184</line>
    </frame>
    <frame>
      <ip>0x83ECB05</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>353</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ef</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are still reachable in loss record 103 of 175</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x7110979</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7106FDD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71074DF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4B2E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3f0</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>48 bytes in 1 blocks are still reachable in loss record 104 of 175</text>
    <leakedbytes>48</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x7110979</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7106FDD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71074DF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4B47</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3f1</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>49 bytes in 1 blocks are possibly lost in loss record 105 of 175</text>
    <leakedbytes>49</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x8414227</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::mediarenderer::avtransport::avtransport()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>23</line>
    </frame>
    <frame>
      <ip>0x840FFB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3f2</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>50 bytes in 1 blocks are possibly lost in loss record 106 of 175</text>
    <leakedbytes>50</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFDB8</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x840FFE4</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::AVTProxy::AVTProxy(DBus::Connection&amp;)</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>types.h</file>
      <line>57</line>
    </frame>
    <frame>
      <ip>0x8363B9A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::AVTProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x836634C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3f3</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>52 bytes in 1 blocks are still reachable in loss record 107 of 175</text>
    <leakedbytes>52</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D566</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F03BB</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F06FD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7107C57</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108D0C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710931B</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F5CBA</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6BBB</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7102395</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_pending_call_block</fn>
    </frame>
    <frame>
      <ip>0x70F61C6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F17AF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3f4</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>55 bytes in 1 blocks are possibly lost in loss record 108 of 175</text>
    <leakedbytes>55</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x840FA2C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::CMProxy::CMProxy(DBus::Connection&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>519</line>
    </frame>
    <frame>
      <ip>0x836AD26</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::CMProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>141</line>
    </frame>
    <frame>
      <ip>0x836B742</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>155</line>
    </frame>
    <frame>
      <ip>0x8379232</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3f5</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>56 bytes in 1 blocks are still reachable in loss record 109 of 175</text>
    <leakedbytes>56</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x710725E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_threads_init</fn>
    </frame>
    <frame>
      <ip>0x7110A29</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710710E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_threads_init_default</fn>
    </frame>
    <frame>
      <ip>0x70CDB05</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::_init_threading()</fn>
    </frame>
    <frame>
      <ip>0x70CE12B</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Dispatcher::Dispatcher()</fn>
    </frame>
    <frame>
      <ip>0x70D3FA3</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusDispatcher::BusDispatcher()</fn>
    </frame>
    <frame>
      <ip>0x6F9AE34</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>160</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3f6</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>56 bytes in 1 blocks are still reachable in loss record 110 of 175</text>
    <leakedbytes>56</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x70FD62F</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71083F0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108629</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3f7</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>56 bytes in 1 blocks are possibly lost in loss record 111 of 175</text>
    <leakedbytes>56</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFDB8</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x840FC65</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>MR::CMProxy::CMProxy(DBus::Connection&amp;)</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>types.h</file>
      <line>57</line>
    </frame>
    <frame>
      <ip>0x836AD26</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::CMProxyStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>141</line>
    </frame>
    <frame>
      <ip>0x836B742</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>155</line>
    </frame>
    <frame>
      <ip>0x8379232</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3f8</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 3 blocks are possibly lost in loss record 112 of 175</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x814B70B</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiScheduleSearchTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8146F69</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiScheduleSearchTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3f9</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 3 blocks are possibly lost in loss record 113 of 175</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x8296596</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>recordScheduleDirectCdsNonEpgTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x82952E5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;recordScheduleDirectCdsNonEpgTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3fa</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 3 blocks are possibly lost in loss record 114 of 175</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x82E0495</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>EPGManagerTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x82E029D</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;EPGManagerTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3fb</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>63 bytes in 3 blocks are possibly lost in loss record 115 of 175</text>
    <leakedbytes>63</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x835DFC1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>StrategyTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8356F9D</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;StrategyTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3fc</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are still reachable in loss record 116 of 175</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x70CB030</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3fd</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>64 bytes in 1 blocks are still reachable in loss record 117 of 175</text>
    <leakedbytes>64</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710CFBF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D026</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F0388</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F06FD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7107C57</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108D0C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710931B</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F5CBA</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6BBB</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7102395</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_pending_call_block</fn>
    </frame>
    <frame>
      <ip>0x70F61C6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F17AF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3fe</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>68 bytes in 1 blocks are still reachable in loss record 118 of 175</text>
    <leakedbytes>68</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x710A87D</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4AAF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c3ff</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>77 bytes in 2 blocks are still reachable in loss record 119 of 175</text>
    <leakedbytes>77</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x7101418</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71016A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7101E19</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F3235</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_register_object_path</fn>
    </frame>
    <frame>
      <ip>0x70C4CF6</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectAdaptor::register_obj()</fn>
    </frame>
    <frame>
      <ip>0x70C4FA1</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectAdaptor::ObjectAdaptor(DBus::Connection&amp;, DBus::Path const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x8079B82</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_dbus_api.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c400</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>84 bytes in 4 blocks are possibly lost in loss record 120 of 175</text>
    <leakedbytes>84</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x80E4C9D</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskBrowseTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x80D08ED</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskBrowseTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c401</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>84 bytes in 4 blocks are possibly lost in loss record 121 of 175</text>
    <leakedbytes>84</leakedbytes>
    <leakedblocks>4</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x82AC03B</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>recordScheduleDirectManualTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x82A1221</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;recordScheduleDirectManualTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c402</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>96 bytes in 1 blocks are still reachable in loss record 122 of 175</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x6F9C3A9</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::instance()</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>34</line>
    </frame>
    <frame>
      <ip>0x80797BB</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_dbus_api.cpp</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c403</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>96 bytes in 2 blocks are still reachable in loss record 123 of 175</text>
    <leakedbytes>96</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x70D40E5</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusDispatcher::add_watch(DBus::Watch::Internal*)</fn>
    </frame>
    <frame>
      <ip>0x70CD9D1</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x71099F7</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F3D37</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_set_watch_functions</fn>
    </frame>
    <frame>
      <ip>0x70CAEC2</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::setup(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x70CAF3E</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::Connection(DBus::Connection::Private*, DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x70CB05F</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c404</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>105 bytes in 5 blocks are possibly lost in loss record 124 of 175</text>
    <leakedbytes>105</leakedbytes>
    <leakedblocks>5</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x80C0B53</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x80B2BFD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c405</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>105 bytes in 5 blocks are possibly lost in loss record 125 of 175</text>
    <leakedbytes>105</leakedbytes>
    <leakedblocks>5</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x80F8B6C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskMetadataTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x80F2573</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskMetadataTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c406</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>105 bytes in 5 blocks are possibly lost in loss record 126 of 175</text>
    <leakedbytes>105</leakedbytes>
    <leakedblocks>5</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x8119C71</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiScheduleTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8115EB1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiScheduleTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c407</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>105 bytes in 5 blocks are possibly lost in loss record 127 of 175</text>
    <leakedbytes>105</leakedbytes>
    <leakedblocks>5</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x8163509</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiScheduleMetadataTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x814EF11</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiScheduleMetadataTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c408</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>105 bytes in 5 blocks are possibly lost in loss record 128 of 175</text>
    <leakedbytes>105</leakedbytes>
    <leakedblocks>5</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x81CC4EF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>WarmUpTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x81C7219</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;WarmUpTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c409</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>124 bytes in 1 blocks are still reachable in loss record 129 of 175</text>
    <leakedbytes>124</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AE03</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>160</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c40a</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>126 bytes in 6 blocks are possibly lost in loss record 130 of 175</text>
    <leakedbytes>126</leakedbytes>
    <leakedblocks>6</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x80EFAAF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>apiTaskSearchTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x80E7309</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;apiTaskSearchTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c40b</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>126 bytes in 6 blocks are possibly lost in loss record 131 of 175</text>
    <leakedbytes>126</leakedbytes>
    <leakedblocks>6</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x81E6F4F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>initTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x81DA6A1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;initTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c40c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>126 bytes in 6 blocks are possibly lost in loss record 132 of 175</text>
    <leakedbytes>126</leakedbytes>
    <leakedblocks>6</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x823BEEA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>RecordDBusSerializeTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8238743</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;RecordDBusSerializeTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c40d</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>126 bytes in 6 blocks are possibly lost in loss record 133 of 175</text>
    <leakedbytes>126</leakedbytes>
    <leakedblocks>6</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x828250B</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>recordScheduleQueryProgTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8279B59</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;recordScheduleQueryProgTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c40e</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>126 bytes in 6 blocks are possibly lost in loss record 134 of 175</text>
    <leakedbytes>126</leakedbytes>
    <leakedblocks>6</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x833C12B</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>taskConflictsTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8323EFF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;taskConflictsTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c40f</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>132 bytes in 1 blocks are still reachable in loss record 135 of 175</text>
    <leakedbytes>132</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x70FCD32</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FFE25</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_new_signal</fn>
    </frame>
    <frame>
      <ip>0x70F4B88</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c410</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>132 bytes in 1 blocks are still reachable in loss record 136 of 175</text>
    <leakedbytes>132</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x70FCD32</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FF6D7</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710802D</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71080E1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108F4E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7109335</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6C38</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7102395</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_pending_call_block</fn>
    </frame>
    <frame>
      <ip>0x70F61C6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F17AF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c411</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>132 bytes in 1 blocks are still reachable in loss record 137 of 175</text>
    <leakedbytes>132</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x70FCD32</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FF6D7</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710802D</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71080E1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108F4E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7109335</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6C38</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7102395</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_pending_call_block</fn>
    </frame>
    <frame>
      <ip>0x70F61C6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F10B7</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_request_name</fn>
    </frame>
    <frame>
      <ip>0x70CB51E</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x828250B</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>recordScheduleQueryProgTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8279B59</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;recordScheduleQueryProgTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c412</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>132 bytes in 1 blocks are still reachable in loss record 138 of 175</text>
    <leakedbytes>132</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x70FCD32</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FF6D7</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710802D</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71080E1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108F4E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7109335</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6C38</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7102395</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_pending_call_block</fn>
    </frame>
    <frame>
      <ip>0x70F61C6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F10B7</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_request_name</fn>
    </frame>
    <frame>
      <ip>0x70CB51E</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x8296596</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>recordScheduleDirectCdsNonEpgTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x82952E5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;recordScheduleDirectCdsNonEpgTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c413</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>136 bytes in 1 blocks are still reachable in loss record 139 of 175</text>
    <leakedbytes>136</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x7108596</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c414</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>140 bytes in 1 blocks are still reachable in loss record 140 of 175</text>
    <leakedbytes>140</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x4409C1C</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440DC50</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440A782</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440D57D</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x7149C71</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440A782</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x714A092</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x7149BB6</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
      <fn>dlopen</fn>
    </frame>
    <frame>
      <ip>0x64DD7B6</ip>
      <obj>/usr/local/lib/libstrategy.so.0.0.0</obj>
      <fn>StrategyFactory::getStrategy()</fn>
      <dir>/opt/jenkins/workspace/x86-target-strategy/src</dir>
      <file>factory.cpp</file>
      <line>63</line>
    </frame>
    <frame>
      <ip>0x83EDBAA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::WarmUpDispatcher::WarmUpDispatcher(SQLite::DB&amp;, SRS::Service&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>WarmUpDispatcher.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x83EBADE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::RecordWaker(SRS::Service&amp;, SRS::IRecordLauncher&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>100</line>
    </frame>
    <frame>
      <ip>0x83E0215</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::Service()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x84D9817</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::ServiceStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x84D9E8A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::createStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x82D23AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>cleanupDbTest::testCleanProg()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_cleanup_db.cpp</file>
      <line>130</line>
    </frame>
    <frame>
      <ip>0x82CC996</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;cleanupDbTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c415</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>140 bytes in 1 blocks are still reachable in loss record 141 of 175</text>
    <leakedbytes>140</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x836B72A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CMProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>155</line>
    </frame>
    <frame>
      <ip>0x8379232</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>47</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c416</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>144 bytes in 1 blocks are still reachable in loss record 142 of 175</text>
    <leakedbytes>144</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x70F4ACA</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c417</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>144 bytes in 1 blocks are still reachable in loss record 143 of 175</text>
    <leakedbytes>144</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x440BBB1</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440DC77</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440A782</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440D57D</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x7149C71</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440A782</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x714A092</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x7149BB6</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
      <fn>dlopen</fn>
    </frame>
    <frame>
      <ip>0x64DD7B6</ip>
      <obj>/usr/local/lib/libstrategy.so.0.0.0</obj>
      <fn>StrategyFactory::getStrategy()</fn>
      <dir>/opt/jenkins/workspace/x86-target-strategy/src</dir>
      <file>factory.cpp</file>
      <line>63</line>
    </frame>
    <frame>
      <ip>0x83EDBAA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::WarmUpDispatcher::WarmUpDispatcher(SQLite::DB&amp;, SRS::Service&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>WarmUpDispatcher.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x83EBADE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::RecordWaker(SRS::Service&amp;, SRS::IRecordLauncher&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>100</line>
    </frame>
    <frame>
      <ip>0x83E0215</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::Service()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x84D9817</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::ServiceStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x84D9E8A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::createStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x82D23AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>cleanupDbTest::testCleanProg()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_cleanup_db.cpp</file>
      <line>130</line>
    </frame>
    <frame>
      <ip>0x82CC996</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;cleanupDbTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c418</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>144 bytes in 1 blocks are possibly lost in loss record 144 of 175</text>
    <leakedbytes>144</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x440CDF5</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440CE89</ip>
      <obj>/lib/ld-2.6.1.so</obj>
      <fn>_dl_allocate_tls</fn>
    </frame>
    <frame>
      <ip>0x71315C2</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
      <fn>pthread_create</fn>
    </frame>
    <frame>
      <ip>0x70C457C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C45FA</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C5237</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectAdaptor::handle_message(DBus::Message const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C4C6D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x7101A52</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F55A5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_dispatch</fn>
    </frame>
    <frame>
      <ip>0x70CE1AD</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Dispatcher::dispatch_pending()</fn>
    </frame>
    <frame>
      <ip>0x70D399E</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusDispatcher::do_iteration()</fn>
    </frame>
    <frame>
      <ip>0x70D3AC3</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusDispatcher::enter()</fn>
    </frame>
    <frame>
      <ip>0x6F9C5EC</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>51</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c419</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>147 bytes in 7 blocks are possibly lost in loss record 145 of 175</text>
    <leakedbytes>147</leakedbytes>
    <leakedblocks>7</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x82C0177</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>timezoneTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x82AF019</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;timezoneTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c41a</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>160 bytes in 1 blocks are still reachable in loss record 146 of 175</text>
    <leakedbytes>160</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710CF63</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FAB14</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F90A4</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F93D7</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FFE41</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_new_signal</fn>
    </frame>
    <frame>
      <ip>0x70F4B88</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F673A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c41b</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>168 bytes in 1 blocks are still reachable in loss record 147 of 175</text>
    <leakedbytes>168</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x70EFEB9</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F0043</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108418</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108629</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110AE0</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110BFF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71081A1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6724</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c41c</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>168 bytes in 8 blocks are possibly lost in loss record 148 of 175</text>
    <leakedbytes>168</leakedbytes>
    <leakedblocks>8</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x826EBCB</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>recordScheduleQuerySerieTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8257D69</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;recordScheduleQuerySerieTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c41d</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>200 bytes in 1 blocks are still reachable in loss record 149 of 175</text>
    <leakedbytes>200</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x710C51D</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710B41B</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710B48E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710B51E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70EE59A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_parse_address</fn>
    </frame>
    <frame>
      <ip>0x70F65A2</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F1D76</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c41e</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>200 bytes in 1 blocks are still reachable in loss record 150 of 175</text>
    <leakedbytes>200</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x710C386</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc0</fn>
    </frame>
    <frame>
      <ip>0x710C51D</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710A497</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710A609</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710A1BE</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F5EFE</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_notify</fn>
    </frame>
    <frame>
      <ip>0x70F603C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply</fn>
    </frame>
    <frame>
      <ip>0x70F617C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F17AF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c41f</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>210 bytes in 10 blocks are possibly lost in loss record 151 of 175</text>
    <leakedbytes>210</leakedbytes>
    <leakedblocks>10</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c420</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>210 bytes in 10 blocks are possibly lost in loss record 152 of 175</text>
    <leakedbytes>210</leakedbytes>
    <leakedblocks>10</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x81A1A5F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>schedulerTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8174475</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;schedulerTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c421</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>220 bytes in 1 blocks are still reachable in loss record 153 of 175</text>
    <leakedbytes>220</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x70C4541</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C45FA</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70C5237</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::ObjectAdaptor::handle_message(DBus::Message const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70C4C6D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x7101A52</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F55A5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_dispatch</fn>
    </frame>
    <frame>
      <ip>0x70CE1AD</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Dispatcher::dispatch_pending()</fn>
    </frame>
    <frame>
      <ip>0x70D399E</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusDispatcher::do_iteration()</fn>
    </frame>
    <frame>
      <ip>0x70D3AC3</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusDispatcher::enter()</fn>
    </frame>
    <frame>
      <ip>0x6F9C5EC</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>51</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c422</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>231 bytes in 11 blocks are possibly lost in loss record 154 of 175</text>
    <leakedbytes>231</leakedbytes>
    <leakedblocks>11</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x71FFD04</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
    </frame>
    <frame>
      <ip>0x71FFF18</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB589</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x830ACD0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CDSContentProxyTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x82FB7D9</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;CDSContentProxyTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c423</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>244 bytes in 1 blocks are still reachable in loss record 155 of 175</text>
    <leakedbytes>244</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x8366334</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::createStub()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x837921C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>LauncherMRTest::setUp()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_renderer_mediarenderer.cpp</file>
      <line>46</line>
    </frame>
    <frame>
      <ip>0x8371869</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;LauncherMRTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c424</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>269 bytes in 11 blocks are possibly lost in loss record 156 of 175</text>
    <leakedbytes>269</leakedbytes>
    <leakedblocks>11</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x7200C06</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_M_mutate(unsigned int, unsigned int, unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x7200DA9</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_M_replace_safe(unsigned int, unsigned int, char const*, unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x7200E42</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::assign(char const*, unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x8368F9F</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::record(DBus::CallMessage&amp;, DBus::MessageIter&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>basic_string.h</file>
      <line>915</line>
    </frame>
    <frame>
      <ip>0x836E38C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::_invoke_method(DBus::CallMessage&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x70C1B1D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::InterfaceProxy::invoke_method(DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x840CB35</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordLauncherMediaRenderer::start(SRS::RecordTask&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>246</line>
    </frame>
    <frame>
      <ip>0x83EC2DF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::startTask(SRS::RecordTask&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>184</line>
    </frame>
    <frame>
      <ip>0x83ECB05</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>353</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c425</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>320 bytes in 10 blocks are still reachable in loss record 157 of 175</text>
    <leakedbytes>320</leakedbytes>
    <leakedblocks>10</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x8064AC5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x8066216</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;::insert_unique(std::_Rb_tree_iterator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt;, std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_tree.h</file>
      <line>947</line>
    </frame>
    <frame>
      <ip>0x836967C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::record(DBus::CallMessage&amp;, DBus::MessageIter&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>stl_map.h</file>
      <line>420</line>
    </frame>
    <frame>
      <ip>0x836E38C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::_invoke_method(DBus::CallMessage&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x70C1B1D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::InterfaceProxy::invoke_method(DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x840CB35</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordLauncherMediaRenderer::start(SRS::RecordTask&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>246</line>
    </frame>
    <frame>
      <ip>0x83EC2DF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::startTask(SRS::RecordTask&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>184</line>
    </frame>
    <frame>
      <ip>0x83ECB05</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>353</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c426</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>330 bytes in 11 blocks are possibly lost in loss record 158 of 175</text>
    <leakedbytes>330</leakedbytes>
    <leakedblocks>11</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x71FEF0A</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator&lt;char&gt; const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x7200C06</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_M_mutate(unsigned int, unsigned int, unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x7200DA9</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::_M_replace_safe(unsigned int, unsigned int, char const*, unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x7200E42</ip>
      <obj>/usr/lib/libstdc++.so.6.0.8</obj>
      <fn>std::string::assign(char const*, unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x8368DE1</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::record(DBus::CallMessage&amp;, DBus::MessageIter&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/bits</dir>
      <file>basic_string.h</file>
      <line>915</line>
    </frame>
    <frame>
      <ip>0x836E38C</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>AVTProxyStub::_invoke_method(DBus::CallMessage&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_MediarendererProxy.h</file>
      <line>58</line>
    </frame>
    <frame>
      <ip>0x70C1B1D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::InterfaceProxy::invoke_method(DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x840CB35</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordLauncherMediaRenderer::start(SRS::RecordTask&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/build/src/.</dir>
      <file>mediarenderer-proxy.h</file>
      <line>246</line>
    </frame>
    <frame>
      <ip>0x83EC2DF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::startTask(SRS::RecordTask&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>184</line>
    </frame>
    <frame>
      <ip>0x83ECB05</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>353</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c427</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>352 bytes in 1 blocks are still reachable in loss record 159 of 175</text>
    <leakedbytes>352</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710CFBF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D026</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D070</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FB5CF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FB71D</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F9196</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FD786</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CFF83</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::CallMessage::path(char const*)</fn>
    </frame>
    <frame>
      <ip>0x84F0EC0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CDSContentProxyStub::CDSQueryStub::_invoke_method(DBus::CallMessage&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_CDSContentProxy.h</file>
      <line>79</line>
    </frame>
    <frame>
      <ip>0x70C1B1D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::InterfaceProxy::invoke_method(DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x8463861</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::query::start(DBus::Path const&amp;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;, std::map&lt;int, std::string, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::string&gt; &gt; &gt; const&amp;, std::vector&lt;DBus::Struct&lt;int, std::string, DBus::Invalid, DBus::Invalid, DBus::Invalid, DBus::Invalid, DBus::Invalid, DBus::Invalid&gt;, std::allocator&lt;DBus::Struct&lt;int, std::string, DBus::Invalid, DBus::Invalid, DBus::Invalid, DBus::Invalid, DBus::Invalid, DBus::Invalid&gt; &gt; &gt; const&amp;, std::vector&lt;DBus::Struct&lt;int, int, DBus::Invalid, DBus::Invalid, DBus::Invalid, DBus::Invalid, DBus::Invalid, DBus::Invalid&gt;, std::allocator&lt;DBus::Struct&lt;int, int, DBus::Invalid, DBus::Invalid, DBus::Invalid, DBus::Invalid, DBus::Invalid, DBus::Invalid&gt; &gt; &gt; const&amp;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;, int const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/ContentDirectory</dir>
      <file>query-proxy.h</file>
      <line>70</line>
    </frame>
    <frame>
      <ip>0x8463B48</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSSearchCtx&lt;SRS::ChanItem&gt;::runQuery()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/ContentDirectory</dir>
      <file>CDSContentProxy.hxx</file>
      <line>88</line>
    </frame>
    <frame>
      <ip>0x846B500</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSSearchCtx&lt;SRS::ChanItem&gt;::start()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/ContentDirectory</dir>
      <file>CDSContentProxy.hxx</file>
      <line>55</line>
    </frame>
    <frame>
      <ip>0x84596F3</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSContentProxy::getChannelInfo(std::string const&amp;, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, std::vector&lt;std::map&lt;std::string, std::string, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::string, std::string, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt; &gt; &gt;&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/ContentDirectory</dir>
      <file>CDSContentProxy.cpp</file>
      <line>362</line>
    </frame>
    <frame>
      <ip>0x8300789</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CDSContentProxyTest::testChannelInfo()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_contentproxy_cds.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x82FB79A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;CDSContentProxyTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c428</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>352 bytes in 1 blocks are still reachable in loss record 160 of 175</text>
    <leakedbytes>352</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710CFBF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D026</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D070</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FB5CF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FB71D</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F9196</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FD786</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CFF83</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::CallMessage::path(char const*)</fn>
    </frame>
    <frame>
      <ip>0x84F0EC0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CDSContentProxyStub::CDSQueryStub::_invoke_method(DBus::CallMessage&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_CDSContentProxy.h</file>
      <line>79</line>
    </frame>
    <frame>
      <ip>0x70C1B1D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::InterfaceProxy::invoke_method(DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84698E5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::query::get_results(DBus::Path const&amp;, int const&amp;, int const&amp;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;, int&amp;, std::vector&lt;std::map&lt;int, std::string, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::string&gt; &gt; &gt;, std::allocator&lt;std::map&lt;int, std::string, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::string&gt; &gt; &gt; &gt; &gt;&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/ContentDirectory</dir>
      <file>query-proxy.h</file>
      <line>125</line>
    </frame>
    <frame>
      <ip>0x846A3A8</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSSearchCtx&lt;SRS::ChanItem&gt;::fill(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/ContentDirectory</dir>
      <file>CDSContentProxy.hxx</file>
      <line>126</line>
    </frame>
    <frame>
      <ip>0x846B636</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSSearchCtx&lt;SRS::ChanItem&gt;::start()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/ContentDirectory</dir>
      <file>CDSContentProxy.hxx</file>
      <line>73</line>
    </frame>
    <frame>
      <ip>0x84596F3</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSContentProxy::getChannelInfo(std::string const&amp;, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt;&amp;, std::vector&lt;std::map&lt;std::string, std::string, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt;, std::allocator&lt;std::map&lt;std::string, std::string, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::string&gt; &gt; &gt; &gt; &gt;&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/ContentDirectory</dir>
      <file>CDSContentProxy.cpp</file>
      <line>362</line>
    </frame>
    <frame>
      <ip>0x8300789</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CDSContentProxyTest::testChannelInfo()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_contentproxy_cds.cpp</file>
      <line>188</line>
    </frame>
    <frame>
      <ip>0x82FB79A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;CDSContentProxyTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c429</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>352 bytes in 1 blocks are still reachable in loss record 161 of 175</text>
    <leakedbytes>352</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710CFBF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D026</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D070</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FB5CF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FB71D</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F9196</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FD786</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CFF83</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::CallMessage::path(char const*)</fn>
    </frame>
    <frame>
      <ip>0x84F0EC0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CDSContentProxyStub::CDSQueryStub::_invoke_method(DBus::CallMessage&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_CDSContentProxy.h</file>
      <line>79</line>
    </frame>
    <frame>
      <ip>0x70C1B1D</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::InterfaceProxy::invoke_method(DBus::CallMessage const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84698E5</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::query::get_results(DBus::Path const&amp;, int const&amp;, int const&amp;, std::vector&lt;int, std::allocator&lt;int&gt; &gt; const&amp;, int&amp;, std::vector&lt;std::map&lt;int, std::string, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::string&gt; &gt; &gt;, std::allocator&lt;std::map&lt;int, std::string, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::string&gt; &gt; &gt; &gt; &gt;&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/ContentDirectory</dir>
      <file>query-proxy.h</file>
      <line>125</line>
    </frame>
    <frame>
      <ip>0x846DE9E</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSSearchCtx&lt;SRS::EPGItem&gt;::fill(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/ContentDirectory</dir>
      <file>CDSContentProxy.hxx</file>
      <line>126</line>
    </frame>
    <frame>
      <ip>0x846F178</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSSearchCtx&lt;SRS::EPGItem&gt;::start()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/ContentDirectory</dir>
      <file>CDSContentProxy.hxx</file>
      <line>73</line>
    </frame>
    <frame>
      <ip>0x8453DA0</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::CDSContentProxy::searchEPGSeries(std::string const&amp;, std::string const*, long, long, std::set&lt;std::string, std::less&lt;std::string&gt;, std::allocator&lt;std::string&gt; &gt; const*, unsigned int)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src/ContentDirectory</dir>
      <file>CDSContentProxy.cpp</file>
      <line>552</line>
    </frame>
    <frame>
      <ip>0x8321FEC</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CDSContentProxyTest::testSearchSeries()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_contentproxy_cds.cpp</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x82FB79A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;CDSContentProxyTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c42a</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>448 bytes in 14 blocks are still reachable in loss record 162 of 175</text>
    <leakedbytes>448</leakedbytes>
    <leakedblocks>14</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x710C3B1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_malloc</fn>
    </frame>
    <frame>
      <ip>0x7110795</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7106EEF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710727F</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_threads_init</fn>
    </frame>
    <frame>
      <ip>0x7110A29</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710710E</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_threads_init_default</fn>
    </frame>
    <frame>
      <ip>0x70CDB05</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::_init_threading()</fn>
    </frame>
    <frame>
      <ip>0x70CE12B</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Dispatcher::Dispatcher()</fn>
    </frame>
    <frame>
      <ip>0x70D3FA3</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::BusDispatcher::BusDispatcher()</fn>
    </frame>
    <frame>
      <ip>0x6F9AE34</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>160</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c42b</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>504 bytes in 1 blocks are still reachable in loss record 163 of 175</text>
    <leakedbytes>504</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E396</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>memalign</fn>
    </frame>
    <frame>
      <ip>0x649E3E5</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>posix_memalign</fn>
    </frame>
    <frame>
      <ip>0x7014DAF</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
    </frame>
    <frame>
      <ip>0x70151C6</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_slice_alloc</fn>
    </frame>
    <frame>
      <ip>0x6FF2D2B</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_hash_table_new_full</fn>
    </frame>
    <frame>
      <ip>0x6FBE9A6</ip>
      <obj>/usr/lib/liblog.so</obj>
      <fn>_log_init</fn>
    </frame>
    <frame>
      <ip>0x6F5EF27</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>onload()</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src</dir>
      <file>Log.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x6F5EF83</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>global constructors keyed to _opt_jenkins_workspace_x86_target_tools2_src_Log.cpp_00000000_8CF0F812</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src</dir>
      <file>Log.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x6F9DC24</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
    </frame>
    <frame>
      <ip>0x6F5B0A0</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
    </frame>
    <frame>
      <ip>0x440AAF0</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440AC16</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440086E</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c42c</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>508 bytes in 1 blocks are still reachable in loss record 164 of 175</text>
    <leakedbytes>508</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x7004C42</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_malloc0</fn>
    </frame>
    <frame>
      <ip>0x7004CE0</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_malloc0_n</fn>
    </frame>
    <frame>
      <ip>0x70141C8</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
    </frame>
    <frame>
      <ip>0x7014329</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
    </frame>
    <frame>
      <ip>0x7015061</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_slice_alloc</fn>
    </frame>
    <frame>
      <ip>0x6FF2D2B</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_hash_table_new_full</fn>
    </frame>
    <frame>
      <ip>0x6FBE9A6</ip>
      <obj>/usr/lib/liblog.so</obj>
      <fn>_log_init</fn>
    </frame>
    <frame>
      <ip>0x6F5EF27</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>onload()</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src</dir>
      <file>Log.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x6F5EF83</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>global constructors keyed to _opt_jenkins_workspace_x86_target_tools2_src_Log.cpp_00000000_8CF0F812</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src</dir>
      <file>Log.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x6F9DC24</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
    </frame>
    <frame>
      <ip>0x6F5B0A0</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
    </frame>
    <frame>
      <ip>0x440AAF0</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440AC16</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440086E</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c42d</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>508 bytes in 1 blocks are still reachable in loss record 165 of 175</text>
    <leakedbytes>508</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x7004C42</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_malloc0</fn>
    </frame>
    <frame>
      <ip>0x7004CE0</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_malloc0_n</fn>
    </frame>
    <frame>
      <ip>0x70141E4</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
    </frame>
    <frame>
      <ip>0x7014329</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
    </frame>
    <frame>
      <ip>0x7015061</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_slice_alloc</fn>
    </frame>
    <frame>
      <ip>0x6FF2D2B</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_hash_table_new_full</fn>
    </frame>
    <frame>
      <ip>0x6FBE9A6</ip>
      <obj>/usr/lib/liblog.so</obj>
      <fn>_log_init</fn>
    </frame>
    <frame>
      <ip>0x6F5EF27</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>onload()</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src</dir>
      <file>Log.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x6F5EF83</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>global constructors keyed to _opt_jenkins_workspace_x86_target_tools2_src_Log.cpp_00000000_8CF0F812</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src</dir>
      <file>Log.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x6F9DC24</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
    </frame>
    <frame>
      <ip>0x6F5B0A0</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
    </frame>
    <frame>
      <ip>0x440AAF0</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440AC16</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440086E</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c42e</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>508 bytes in 1 blocks are still reachable in loss record 166 of 175</text>
    <leakedbytes>508</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x7004C42</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_malloc0</fn>
    </frame>
    <frame>
      <ip>0x7004CE0</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_malloc0_n</fn>
    </frame>
    <frame>
      <ip>0x7014200</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
    </frame>
    <frame>
      <ip>0x7014329</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
    </frame>
    <frame>
      <ip>0x7015061</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_slice_alloc</fn>
    </frame>
    <frame>
      <ip>0x6FF2D2B</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_hash_table_new_full</fn>
    </frame>
    <frame>
      <ip>0x6FBE9A6</ip>
      <obj>/usr/lib/liblog.so</obj>
      <fn>_log_init</fn>
    </frame>
    <frame>
      <ip>0x6F5EF27</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>onload()</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src</dir>
      <file>Log.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x6F5EF83</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>global constructors keyed to _opt_jenkins_workspace_x86_target_tools2_src_Log.cpp_00000000_8CF0F812</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src</dir>
      <file>Log.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x6F9DC24</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
    </frame>
    <frame>
      <ip>0x6F5B0A0</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
    </frame>
    <frame>
      <ip>0x440AAF0</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440AC16</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440086E</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c42f</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>643 bytes in 1 blocks are still reachable in loss record 167 of 175</text>
    <leakedbytes>643</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x4407BF5</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x4404B98</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x44068C5</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440DB7B</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440A782</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440D57D</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x7149C71</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440A782</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x714A092</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x7149BB6</ip>
      <obj>/lib/libdl-2.6.1.so</obj>
      <fn>dlopen</fn>
    </frame>
    <frame>
      <ip>0x64DD7B6</ip>
      <obj>/usr/local/lib/libstrategy.so.0.0.0</obj>
      <fn>StrategyFactory::getStrategy()</fn>
      <dir>/opt/jenkins/workspace/x86-target-strategy/src</dir>
      <file>factory.cpp</file>
      <line>63</line>
    </frame>
    <frame>
      <ip>0x83EDBAA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::WarmUpDispatcher::WarmUpDispatcher(SQLite::DB&amp;, SRS::Service&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>WarmUpDispatcher.cpp</file>
      <line>45</line>
    </frame>
    <frame>
      <ip>0x83EBADE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::RecordWaker::RecordWaker(SRS::Service&amp;, SRS::IRecordLauncher&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>RecordWaker.cpp</file>
      <line>100</line>
    </frame>
    <frame>
      <ip>0x83E0215</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::Service::Service()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>Service.cpp</file>
      <line>89</line>
    </frame>
    <frame>
      <ip>0x84D9817</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::ServiceStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>98</line>
    </frame>
    <frame>
      <ip>0x84D9E8A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::ServiceStub::createStub(bool, SRS::IRecordLauncher*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>stub_Service.cpp</file>
      <line>37</line>
    </frame>
    <frame>
      <ip>0x82D23AA</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>cleanupDbTest::testCleanProg()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_cleanup_db.cpp</file>
      <line>130</line>
    </frame>
    <frame>
      <ip>0x82CC996</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;cleanupDbTest&gt;::runTest()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A25F</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c430</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>1,024 bytes in 1 blocks are still reachable in loss record 168 of 175</text>
    <leakedbytes>1024</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F792</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>operator new(unsigned int)</fn>
    </frame>
    <frame>
      <ip>0x80672F8</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::_M_insert_aux(__gnu_cxx::__normal_iterator&lt;std::string*, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;, std::string const&amp;)</fn>
      <dir>/usr/lib/gcc/i486-pc-linux-gnu/4.1.2/include/g++-v4/ext</dir>
      <file>new_allocator.h</file>
      <line>90</line>
    </frame>
    <frame>
      <ip>0x6E0948E</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::push_back(std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x70CB5A9</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::request_name(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x6F9AB50</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::requestName(std::string const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x6F9B197</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>206</line>
    </frame>
    <frame>
      <ip>0x833C12B</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>taskConflictsTest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8323EFF</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;taskConflictsTest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AC92</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestDecorator::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E143AF</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestSetUp::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0AA44</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E0A994</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E140AD</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::WrappingSuite::run(CppUnit::TestResult*)</fn>
    </frame>
    <frame>
      <ip>0x6E10F5A</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::runTest(CppUnit::Test*)</fn>
    </frame>
    <frame>
      <ip>0x6E13F33</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestRunner::run(CppUnit::TestResult&amp;, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x84AE7FD</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>main</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/tests</dir>
      <file>test_main.cpp</file>
      <line>113</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c431</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>1,512 bytes in 3 blocks are still reachable in loss record 169 of 175</text>
    <leakedbytes>1512</leakedbytes>
    <leakedblocks>3</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E396</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>memalign</fn>
    </frame>
    <frame>
      <ip>0x649E3E5</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>posix_memalign</fn>
    </frame>
    <frame>
      <ip>0x7014DAF</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
    </frame>
    <frame>
      <ip>0x70151E2</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_slice_alloc</fn>
    </frame>
    <frame>
      <ip>0x6FF2D2B</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_hash_table_new_full</fn>
    </frame>
    <frame>
      <ip>0x6FBE9A6</ip>
      <obj>/usr/lib/liblog.so</obj>
      <fn>_log_init</fn>
    </frame>
    <frame>
      <ip>0x6F5EF27</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>onload()</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src</dir>
      <file>Log.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x6F5EF83</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>global constructors keyed to _opt_jenkins_workspace_x86_target_tools2_src_Log.cpp_00000000_8CF0F812</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src</dir>
      <file>Log.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x6F9DC24</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
    </frame>
    <frame>
      <ip>0x6F5B0A0</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
    </frame>
    <frame>
      <ip>0x440AAF0</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440AC16</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440086E</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c432</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>2,040 bytes in 1 blocks are still reachable in loss record 170 of 175</text>
    <leakedbytes>2040</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649E4C8</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x7004C42</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_malloc0</fn>
    </frame>
    <frame>
      <ip>0x7013EFF</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
    </frame>
    <frame>
      <ip>0x701506F</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_slice_alloc</fn>
    </frame>
    <frame>
      <ip>0x6FF2D2B</ip>
      <obj>/usr/lib/libglib-2.0.so.0.2800.8</obj>
      <fn>g_hash_table_new_full</fn>
    </frame>
    <frame>
      <ip>0x6FBE9A6</ip>
      <obj>/usr/lib/liblog.so</obj>
      <fn>_log_init</fn>
    </frame>
    <frame>
      <ip>0x6F5EF27</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>onload()</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src</dir>
      <file>Log.cpp</file>
      <line>21</line>
    </frame>
    <frame>
      <ip>0x6F5EF83</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>global constructors keyed to _opt_jenkins_workspace_x86_target_tools2_src_Log.cpp_00000000_8CF0F812</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src</dir>
      <file>Log.cpp</file>
      <line>28</line>
    </frame>
    <frame>
      <ip>0x6F9DC24</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
    </frame>
    <frame>
      <ip>0x6F5B0A0</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
    </frame>
    <frame>
      <ip>0x440AAF0</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440AC16</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x440086E</ip>
      <obj>/lib/ld-2.6.1.so</obj>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c433</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>2,056 bytes in 1 blocks are still reachable in loss record 171 of 175</text>
    <leakedbytes>2056</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710FFD1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x71100FA</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108C4A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710931B</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F5CBA</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6BBB</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7102395</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_pending_call_block</fn>
    </frame>
    <frame>
      <ip>0x70F61C6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F17AF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c434</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>2,056 bytes in 1 blocks are still reachable in loss record 172 of 175</text>
    <leakedbytes>2056</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7110330</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108EDF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7109335</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6C38</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7102395</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_pending_call_block</fn>
    </frame>
    <frame>
      <ip>0x70F61C6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F17AF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c435</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>4,096 bytes in 1 blocks are still reachable in loss record 173 of 175</text>
    <leakedbytes>4096</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F088</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x649F0FE</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x70FD4EC</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7108EBF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7109335</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710772A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F4ED1</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70F6C38</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x7102395</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_pending_call_block</fn>
    </frame>
    <frame>
      <ip>0x70F61C6</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_connection_send_with_reply_and_block</fn>
    </frame>
    <frame>
      <ip>0x70F17AF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_bus_register</fn>
    </frame>
    <frame>
      <ip>0x70F1D9C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70CA938</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CB03C</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::Connection::SystemBus(DBus::Dispatcher*)</fn>
    </frame>
    <frame>
      <ip>0x6F9AF0E</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>162</line>
    </frame>
    <frame>
      <ip>0x6F9B0B6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::dbus::DBusManager::init(std::string const&amp;, bool)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/dbus</dir>
      <file>DBusManager.cpp</file>
      <line>203</line>
    </frame>
    <frame>
      <ip>0x8079808</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBusAPITest::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/local/include/tools2/dbus</dir>
      <file>DBusManager.h</file>
      <line>69</line>
    </frame>
    <frame>
      <ip>0x8063289</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>CppUnit::TestCaller&lt;DBusAPITest&gt;::setUp()</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>177</line>
    </frame>
    <frame>
      <ip>0x6E0A4EE</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E00AA4</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E073C1</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
    </frame>
    <frame>
      <ip>0x6E07308</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E10FF5</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::string const&amp;)</fn>
    </frame>
    <frame>
      <ip>0x6E0A1C6</ip>
      <obj>/usr/lib/libcppunit-1.12.so.0.0.0</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c436</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>14,272 bytes in 1 blocks are still reachable in loss record 174 of 175</text>
    <leakedbytes>14272</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710CF63</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FA5F4</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FA930</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FE329</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_iter_open_container</fn>
    </frame>
    <frame>
      <ip>0x70D10AB</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::MessageIter::new_dict_entry()</fn>
    </frame>
    <frame>
      <ip>0x808C5DE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBus::MessageIter&amp; operator&lt;&lt; &lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;(DBus::MessageIter&amp;, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>types.h</file>
      <line>317</line>
    </frame>
    <frame>
      <ip>0x8091F4D</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::srs::LastChange(std::list&lt;SRS::LastChangeEvent, std::allocator&lt;SRS::LastChangeEvent&gt; &gt; const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService-adaptor.h</file>
      <line>41</line>
    </frame>
    <frame>
      <ip>0x83F1E06</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::LastChangeDispatcher::postEvents()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>LastChangeDispatcher.cpp</file>
      <line>128</line>
    </frame>
    <frame>
      <ip>0x83F201A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::LastChangeDispatcher::handle()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>LastChangeDispatcher.cpp</file>
      <line>101</line>
    </frame>
    <frame>
      <ip>0x6F7697D</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::notifier::EventDispatcher::dispatchNextEvent(int)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/notifier</dir>
      <file>EventDispatcher.cpp</file>
      <line>195</line>
    </frame>
    <frame>
      <ip>0x83F09A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::EventDispatcher::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>EventDispatcher.cpp</file>
      <line>39</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2c437</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>28,544 bytes in 2 blocks are still reachable in loss record 175 of 175</text>
    <leakedbytes>28544</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x649F163</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-x86-linux.so</obj>
      <fn>realloc</fn>
    </frame>
    <frame>
      <ip>0x710C35A</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_realloc</fn>
    </frame>
    <frame>
      <ip>0x710CDBD</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710CFBF</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710D026</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710BC52</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x710BE22</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FA67C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FA6C5</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
    </frame>
    <frame>
      <ip>0x70FE73C</ip>
      <obj>/usr/lib/libdbus-1.so.3.5.7</obj>
      <fn>dbus_message_iter_append_basic</fn>
    </frame>
    <frame>
      <ip>0x70CFC60</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
    </frame>
    <frame>
      <ip>0x70CFCB9</ip>
      <obj>/usr/lib/libdbus-c++-1-0.6.0-pre1.so.1.2.0</obj>
      <fn>DBus::MessageIter::append_string(char const*)</fn>
    </frame>
    <frame>
      <ip>0x808C5FE</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>DBus::MessageIter&amp; operator&lt;&lt; &lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt;(DBus::MessageIter&amp;, std::map&lt;std::string, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt; &gt; &gt; &gt; const&amp;)</fn>
      <dir>/usr/targets/jenkins-x86/root//usr/include/dbus-c++-1/dbus-c++</dir>
      <file>types.h</file>
      <line>261</line>
    </frame>
    <frame>
      <ip>0x8091F4D</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>com::play::srs::LastChange(std::list&lt;SRS::LastChangeEvent, std::allocator&lt;SRS::LastChangeEvent&gt; &gt; const&amp;)</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>ScheduledRecordingService-adaptor.h</file>
      <line>41</line>
    </frame>
    <frame>
      <ip>0x83F1E06</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::LastChangeDispatcher::postEvents()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>LastChangeDispatcher.cpp</file>
      <line>128</line>
    </frame>
    <frame>
      <ip>0x83F201A</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::LastChangeDispatcher::handle()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>LastChangeDispatcher.cpp</file>
      <line>101</line>
    </frame>
    <frame>
      <ip>0x6F7697D</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::notifier::EventDispatcher::dispatchNextEvent(int)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/notifier</dir>
      <file>EventDispatcher.cpp</file>
      <line>195</line>
    </frame>
    <frame>
      <ip>0x83F09A2</ip>
      <obj>/usr/local/tests/srs/test_all</obj>
      <fn>SRS::EventDispatcher::thread_routine()</fn>
      <dir>/opt/jenkins/workspace/x86-target-srs/src</dir>
      <file>EventDispatcher.cpp</file>
      <line>39</line>
    </frame>
    <frame>
      <ip>0x6F8F5D6</ip>
      <obj>/usr/local/lib/libtools-2.so.0.0.0</obj>
      <fn>tools::threading::Thread::thread_routine_wrapper(void*)</fn>
      <dir>/opt/jenkins/workspace/x86-target-tools2/src/threading</dir>
      <file>Thread.cpp</file>
      <line>109</line>
    </frame>
    <frame>
      <ip>0x7130F87</ip>
      <obj>/lib/libpthread-2.6.1.so</obj>
    </frame>
    <frame>
      <ip>0x73348CD</ip>
      <obj>/lib/libc-2.6.1.so</obj>
      <fn>clone</fn>
    </frame>
  </stack>
</error>

<errorcounts>
  <pair>
    <count>681</count>
    <unique>0x46</unique>
  </pair>
  <pair>
    <count>539</count>
    <unique>0x81</unique>
  </pair>
  <pair>
    <count>1435</count>
    <unique>0x3b</unique>
  </pair>
  <pair>
    <count>1435</count>
    <unique>0x3a</unique>
  </pair>
  <pair>
    <count>1435</count>
    <unique>0x39</unique>
  </pair>
  <pair>
    <count>1435</count>
    <unique>0x38</unique>
  </pair>
  <pair>
    <count>1435</count>
    <unique>0x37</unique>
  </pair>
  <pair>
    <count>1435</count>
    <unique>0x36</unique>
  </pair>
  <pair>
    <count>1435</count>
    <unique>0x35</unique>
  </pair>
  <pair>
    <count>1435</count>
    <unique>0x34</unique>
  </pair>
  <pair>
    <count>1435</count>
    <unique>0x33</unique>
  </pair>
  <pair>
    <count>13861</count>
    <unique>0x53</unique>
  </pair>
  <pair>
    <count>13861</count>
    <unique>0x52</unique>
  </pair>
  <pair>
    <count>13861</count>
    <unique>0x51</unique>
  </pair>
  <pair>
    <count>13861</count>
    <unique>0x50</unique>
  </pair>
  <pair>
    <count>13861</count>
    <unique>0x4f</unique>
  </pair>
  <pair>
    <count>13861</count>
    <unique>0x4e</unique>
  </pair>
  <pair>
    <count>13861</count>
    <unique>0x4d</unique>
  </pair>
  <pair>
    <count>13861</count>
    <unique>0x4c</unique>
  </pair>
  <pair>
    <count>13861</count>
    <unique>0x4b</unique>
  </pair>
  <pair>
    <count>13861</count>
    <unique>0x4a</unique>
  </pair>
  <pair>
    <count>13861</count>
    <unique>0x49</unique>
  </pair>
  <pair>
    <count>13861</count>
    <unique>0x48</unique>
  </pair>
  <pair>
    <count>62</count>
    <unique>0x47</unique>
  </pair>
  <pair>
    <count>516</count>
    <unique>0x45</unique>
  </pair>
  <pair>
    <count>8</count>
    <unique>0x231c</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x31</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x30</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x2e</unique>
  </pair>
  <pair>
    <count>2</count>
    <unique>0x2c</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x2b</unique>
  </pair>
</errorcounts>

<suppcounts>
  <pair>
    <count>68</count>
    <name>dl-hack3-1</name>
  </pair>
</suppcounts>

</valgrindoutput>

